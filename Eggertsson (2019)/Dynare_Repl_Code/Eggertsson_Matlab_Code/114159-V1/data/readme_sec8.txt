Instructions for running the Matlab code for Eggertsson, Mehrotra, & Robbins, "A Model of Secular Stagnation: Theory and Quantitative Evaluation"


SHORT INSTRUCTIONS FOR REPLICATION

Open the file sec_stag_calibration_control_panel.m in Matlab, press run. Table results will be stored in the "text_results" folder, and figure results will be stored in the "figures" folder. The exact tables and figures in Section 8 are found here:

Table 3 is replicated in text_results/main_calib.txt
Figure7 is replicated in figures/as_ad_out_main_calibration.png
Tables 5-7 is replicated in text_results/main_calibration_results.txt
Figure 8 is replicated in text_results/full_main_calibration_tables.csv
Figure 9 is replicated text_results/baby_boom_main_calibration_tables.csv and figures/baby_boom_main_calibration_set7.png

LONG INSTRUCTIONS FOR REPLICATION

The file sec_stag_calibration_control_panel.m is the master control file which does several things:

(1) Calibrates the model for the main calibration
(2) Runs the model, and automatically generates all tables and figures.

In order to run the model and generate all tables and figures from scratch, simply open sec_stag_calibration_control_panel.m in Matlab and press run. 

By default the results do not produce transition dynamics given the time required. In order to run transition dynamics, set the option "run_transition" to 1 at the top of the program. 

By default the program does not calibrate the model, but reads in pre-calibrated parameters. If the user wants to re-calibrate the model, simply set 'calibrate' to be 1 at the top of the program.

There are a number of additional controls that can be found in the program that control which results are run. These are controlled by the structural variable controller_main, and can be changed to perform a variety of different runs. 

The overall structure of the program is somewhat complex; there are a variety of different functions and programs which are called by the main program. The following is a brief overview of the structure of the files. 

The main function called in sec_stag_calibration_control_panel.m is sec_stag_calibration.m. This function, for a given set of parameters taken as an argument, solves the model and returns an objective function equal to the difference between the model's moments and a set of data moments, which is a separate argument to the function. 

To calibrate the model to 1970, sec_stag_calibration_control_panel.m optimizes over the objective function sec_stag_calibration_1970. 

Once the model is calibrated, all the results are generated by calling the function sec_stag_runmachine.m. The actual results which are run are controlled by the argument (controller).

In order to calculate moments for a given run of the model, set_stag_runmachine will call the function master_control.m. This is a flexible program; depending on the argument given, it can calculate an initial steady state, a final steady state, or a transition. 

BRIEF DESCRIPTION OF THE MAIN PROGRAMS

ak_display.m - Displays the output from the equilibrium. 

ak_display_control.m - Controls the output displayed from ak_display. 

bequest_control.m - Calculates bequests so the accounting is correct. 

calc_deriv.m - Makes summary statistics. 

calc_elas.m - Makes calculations for summary statistics. 

calculate_oldu.m - Not used in the paper. Calculates utility for the LSRA. 

calculate_prices.m - Updates aggregate prices, given aggregate quantities (first-order conditions for firm’s problem). 

calculate_Q.m - Calculates Tobin’s Q and the interest rate. 

cb_nonl_cons.m - When using opt_control_matlab, this function displays whether or not an individual satisfies the budget constraint. 

create_index.m - Depending on whether we are running the initial steady state, transition, or final steady state, this calculates the correct index to use when looping through an individual's age. 

create_profile.m - This program manages the equilibrium prices and quantities for a given iteration and puts them into easy to use structures and matrices. 

crrautil.m - The CRRA utility function. 

demog_comp.m - Not used in the paper. Calculates elasticity of savings with respect to population growth. 

endog_fertility.m - Calculates fertility rates as in Auerbach & Kotlikoff,  Chapter 11. 

equil_update.m - This is a within-iteration program which calculates the equilibrium given a guess for aggregate levels of capital / labor. 

genmhs.m - Calculates probability an individual survives. 

gens.m - Calculates more survival probabilities. 

getpv1_alt.m - Alternative way of calculating present value of income. Useful for calculating optimal consumption. 

getpv1.m - Calculates present value of income. Useful for calculating optimal consumption. 

getx1_alt.m, getx1.m - Calculates percentage of present value of income an individual consumes. Useful for calculating optimal consumption. 

gov_dec.m - Sets the government decisions, i.e. taxes, spending, and the proportion of government revenue financed by the deficit (fiscal policy conditions). 

graph_display.m - Displays graphs of the output for the transition. 

initialize_iss.m - Sets the guesses for calculating the initial steady state. 

initialize_fss.m - Sets the guesses for calculating the final steady state. 

initialize_trans.m - Sets the guesses for calculating the transition. 

kl_func.m - Only run for partial equilibrium runs. Finds the optimal capital to output ratio demanded by firms. 

lsra.m - For welfare analysis, a "lump sum redistribution authority" redistributes income across generations. This is not used in the main text of the paper. 

master_control.m - Program controls which equilibria are calculated. 

nipa_display.m - Displays NIPA statistics from the model.  

nipa_display_control.m - Controls the display of NIPA moments. 

opt_control.m - Old version of calculating an individual's optimal consumption and savings decisions. 

opt_control_final - Master control file for calculating an individual's consumption and savings decisions. 

opt_control_matlab - Alternative way of calculating an individual's consumption and savings decisions from opt_control_final. This uses matlab's fmincon, but is much much much slower than opt_control_final. These two methods yield the same results.

opt_lb.m, opt_lb_alt.m, olt_lb_final_calc.m, opt_lb_master.m - Calculate optimal consumption and bond holdings from individuals.

plot_adjust.m - Adjusts figures when plotting population and productivity growth.  

pop_adjust.m - Makes adjustments to population figures. 

prod_adjustment.m - Makes adjustment to productivity totals. 

repeatfunc.m - Updates aggregate quantities and determines whether or not another iteration is run.  

r_mult.m, r_mult_alt.m, r_mult_fin.m, r_mult_simp.m - Functions which multiplies interest rates. 

recursive_solve.m, recursive_solve_alt.m - Programs to recursively solve consumption and investment problems. 

set_stag_calibration.m - Calibrates the economy to the US in 2015. 

sec_stag_calibration_1970.m - Calibrates the model to the US in 1970. 

testing_nl.m - Tests the nonlinear budget constraint is satisfied. Called when solving optimization through MATLAB's fmincon. 

test_crrautil.m - Called when solving optimization through fmincon. 

ucalc.m - Calculates lifetime utility. 

update_ssben.m - If a social security policy is specified, this calculates social security benefits. 

update_sst.m - If a social security policy is specified, this calculates social security taxes. 

