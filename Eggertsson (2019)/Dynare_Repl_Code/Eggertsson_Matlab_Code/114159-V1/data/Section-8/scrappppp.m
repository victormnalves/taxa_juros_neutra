        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        % Compute Marginal and Average Taxes
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

        ps(type).tax.ya(year,age) = run_schedule.tdamp * (gov.tax.yp(year) + ...
                                    gov.tax.yg(year)*...
                                    (ps(type).opt.inc(year,age) + ps(type).opt.a(year,age)*prices.r(year))/2) ...
                                    + (1-run_schedule.tdamp)*ps(type).tax.ya(year,age);
                                
        ps(type).tax.ym(year,age) = run_schedule.tdamp * (gov.tax.yp(year) + ...
                                    gov.tax.yg(year)*...
                                    (ps(type).opt.inc(year,age) + ps(type).opt.a(year,age)*prices.r(year))) ...
                                    + (1-run_schedule.tdamp)*ps(type).tax.ym(year,age);

        ps(type).tax.wa(year,age) = run_schedule.tdamp * (gov.tax.wp(year) + ...
                                    gov.tax.wg(year)*...
                                    (ps(type).opt.inc(year,age))/2) ...
                                    + (1-run_schedule.tdamp)*ps(type).tax.wa(year,age);
                                
                                

                                
        % Year Born -- we need this because this is the index which ss_age
        % is stored in
        
        year_born = year - age + 1;
        if year_born < 1
            year_born = 1;
        end
                                
        ps(type).tax.wm(year,age) = run_schedule.tdamp * (gov.tax.wp(year) + ...
                                    gov.tax.wg(year)*ps(type).opt.inc(year,age) ...
                                    + ps(type).tax.sst(year,age)*(age<gov.ss_age(year_born) )) ...
                                    + (1-run_schedule.tdamp)*ps(type).tax.wm(year,age);
                                


        ps(type).tax.ka(year,age) = run_schedule.tdamp * (gov.tax.kp(year) + ...
                                    gov.tax.kg(year)*...
                                    (ps(type).opt.a(year,age)*prices.r(year))/2) ...
                                    + (1-run_schedule.tdamp)*ps(type).tax.ka(year,age);
                                
        ps(type).tax.km(year,age) = run_schedule.tdamp * (gov.tax.kp(year) + ...
                                    gov.tax.kg(year)*...
                                    (ps(type).opt.a(year,age)*prices.r(year))) ...
                                    + (1-run_schedule.tdamp)*ps(type).tax.km(year,age);
            
            